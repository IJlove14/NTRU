from ntru import Ntru
from fractions import gcd
import time
start = time.time()
#Bob
print("Public Key is generated by using Parameters: ", end = '')
print("N = 509, p = 3, and q = 2048")
Bob = Ntru(701, 3, 8192)
# f(x) = 1 + x - x^2 - x^4 + x^5
f = [1, 1, -1, 0, -1, 1]
# g(x) = -1 + x^2 + x^3 - x^6
g = [-1, 0, 1, 1, 0, 0, -1]
d = 2
print("f(x)= ", f)
print("g(x)= ", g)
print("d   = ", d, "\n\n")

Bob.genPublicKey(f, g, 2)
pub_key = Bob.getPublicKey()
print("Public Key Generated by Bob: ", pub_key, "\n\n")

#Alice
Alice = Ntru(701, 3, 8192)
Alice.setPublicKey(pub_key)
message = [1, 0, 1, 0, 1, 1, 1]
print("Original Message to be send: ", message)

# r(x) = -1 - x + x^2 + x^3
ranPol = [-1, -1, 1, 1]
print("Random Polynomial: ", ranPol)
encryptedMessage = Alice.encrypt(message, ranPol)
print("Encrypted Message to be send: ", encryptedMessage, "\n\n")

#BOB
print("Bob decrypts message sent to him")
print("Decrypted Message: ", Bob.decrypt(encryptedMessage))

end = time.time()

#Subtract Start Time from The End Time
total_time = end - start
print("\n"+ str(total_time))